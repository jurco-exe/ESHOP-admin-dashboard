//! LINEAR GRADIENT
@mixin linear-gradiant($bg, $args...) {
  background: $bg;
  background: linear-gradient($args);
  background: -moz-linear-gradient($args);
  background: -webkit-linear-gradient($args);
}
//! ---------------------------

//! BORDER RADIUS
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
//! ---------------------------

//! BORDER
@mixin border($size, $color) {
  border: $size solid $color;
}
//! ---------------------------

//! BACKGRUND IMAGE CENTER
@mixin center-bg-img($url) {
  background-image: url($url);
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
//! ---------------------------

//! BOX SHADOW
@mixin box-shadow($args...) {
  box-shadow: $args;
}
//! ---------------------------

//? Flexbox Toolkit:

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

// //? Font Toolkit:
// @mixin font-size($font-size, $line-height: normal, $letter-spacing: normal) {
//   font-size: $font-size * 0.1rem;

//   @if $line-height==normal {
//     line-height: normal;
//   } @else {
//     line-height: $line-height / $font-size;
//   }

//   @if $letter-spacing==normal {
//     letter-spacing: normal;
//   } @else {
//     letter-spacing: #{$letter-spacing / $font-size}em;
//   }
// }

/* ===== Usage ===== */
// p {
//   @include font-size(12, 18, 1.2);
//   // returns
//   font-size: 12px;
//   line-height: 1.5; // 18 / 12
//   letter-spacing: 0.1em;
// }

//! ABSOLUTE POSITIONING
@mixin abs-pos($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

//! --------------------

//MEDIA QUERY MANAGER

/*
0 - 600: Phone
600 - 900: Tablet portrait
900 - 1200: Tablet landscape
1200 - 1800: Normal styles
1800+ : Big Desktop
1em = 16px
The smaller device rules always should write below the bigger device rules
Fixing Order => Base + Typography >> General Layout + Grid >> Page Layout + Component
*/

@mixin respond($breakpoint) {
  @if ($breakpoint == "phone") {
    @media only screen and (max-width: 575px) {
      @content;
    }
  }

  @if ($breakpoint == "phone-land") {
    @media only screen and (max-width: 767px) {
      @content;
    }
  }

  @if ($breakpoint == "tab-port") {
    @media only screen and (max-width: 991px) {
      @content;
    }
  }

  @if ($breakpoint == "tab-land") {
    @media only screen and (max-width: 1199px) {
      @content;
    }
  }

  @if ($breakpoint == "desktop") {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  }

  @if ($breakpoint == "big-desktop") {
    @media only screen and (min-width: 1800px) {
      @content;
    }
  }
}

//don't use it untill you need this too much
@mixin custommq($min: null, $max: null) {
  @if ($min != null and $max != null) {
    @media only screen and (min-width: $min) and (max-width: $max) {
      @content;
    }
  }

  @if ($min == null and $max != null) {
    @media only screen and (max-width: $max) {
      @content;
    }
  }

  @if ($min != null and $max == null) {
    @media only screen and (min-width: $min) {
      @content;
    }
  }
}
